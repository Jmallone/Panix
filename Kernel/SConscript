from os import walk
import subprocess
Import('env')

env = env.Clone()
linkerscript = env.File('arch/$ARCH/linker.ld')
env.Append(
    LINKSCRIPT=linkerscript,
    CXXFLAGS='-fanalyzer',
    LINKFLAGS='-T${LINKSCRIPT}',
)

crti = env.File('arch/$ARCH/Assembly/crti.s')
crtn = env.File('arch/$ARCH/Assembly/crtn.s')
crtbegin = subprocess.check_output(
        [env.subst('$CC'), '-print-file-name=crtbegin.o']
).decode().rstrip()
crtend = subprocess.check_output(
        [env.subst('$CC'), '-print-file-name=crtend.o']
).decode().rstrip()
sources = [Glob(path + '/*.cpp') + Glob(path + '/*.s', exclude=path + '/crt?.s') for (path, name, files) in walk('.')]

kernel = env.Program(
    'kernel',
    Flatten([crti, crtbegin, Flatten(sources), crtend, crtn]),
    LIBS=['gcc', 'alloc'],
)

env.Depends(kernel, linkerscript)

Return('kernel')
